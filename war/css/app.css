/* app css stylesheet */

@font-face
{
font-family: AdobeArabic;
src: url(../font/AdobeArabic-Regular.otf);
}
@font-face
{
font-family: AdobeArabic;
src: url(../font/AdobeArabic-Bold.otf);
}
@font-face
{
font-family: ArabicTraditional;
src: url(../font/trado.ttf);
}

.gameBoard {
	position: relative;
	width: 916px;
	height: 688px;
	background-image: url(../img/background.png);
	direction: rtl;
	user-select: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
//	font-family: Tahoma;
}

.userFeedbackButton{
	position: absolute;	
	bottom: 20;
	right: 5;
}


.brokenWord.ng-hide-add {
	transition: 5s linear all;
	opacity: 1;
}

.brokenWord.ng-hide-add-active {
	opacity: 0;
}

.brokenWord1.ng-hide-remove {
	transition: 5s linear all;
	opacity: 0;
}

.brokenWord1.ng-hide-remove-active {
	opacity: 1;
	color: red;
}

.brokenWord {
	position: relative;
	height: 140px;
	color: #00576e;
//	background: pink;
	direction: rtl;
	text-align: center;
	width: 70%;
//	top: -20px;
//	padding-top: 20px;
}
.solvedWord {
	position: relative;
	color: #00576e;
	font-size: 88;
	font-wight: bold;
	height: 0px;
//	background: yellow;
	text-align: center;
	direction: rtl;
	width: 70%;
}

.letterInWord {
	position: relative;
	display: inline-block;
	height: 120px;
	padding-top: 20px;
	top: -20px;
	font-size: 88;
	font-weight: bold;
	direction: rtl;
//	background: magenta;
	text-align: center;
}

.distractorsList { 
	position: relative;
//	background: red;
	height: 90px;
	text-align: center;
	direction: rtl;
	top: -20px;
	width: 70%;
	
}

.innerDistractor {
	display: inline-block;
	background : white; 
	padding-right: 5px;
	padding-left: 5px;
	margin-right:4px;
	margin-left: 4px;
	height: 75px;	
}

.distractor {
	position: relative;
	color: #00576e;
	font-size: 45px;
	top: 30px;
	display: inline-block;
	direction: rtl; 

}

.distractor.ng-enter {
	transition: 1s linear all;
	opacity: 0;
	-webkit-transform: skew(30deg, 20deg);
}

.distractor.ng-enter-active {
	opacity: 1;
	-webkit-transform: skew(0deg, 0deg);
}

.distractor.ng-enter-stagger {
	/* this will have a 100ms delay between each successive leave animation */
	-webkit-transition-delay: 0.3s;
	transition-delay: 0.3s;
	/* in case the stagger doesn't work then these two values
   must be set to 0 to avoid an accidental CSS inheritance */
	-webkit-transition-duration: 0s;
	transition-duration: 0s;
}



.feedbackToPlayer.ng-hide-remove {
	transition: 1s linear all;
	opacity: 0;
	font-size: 12;
	-webkit-transform: rotate(0deg);
	display: block !important;
}

.feedbackToPlayer.ng-hide-remove-active {
	font-size: 72;
	opacity: 1;
	-webkit-transform: rotate(15deg);
}

.feedbackArea {
	position: relative;
//	height: 80px;
	direction: ltr;
//	background: orange;
	text-align: center;
	width: 70%;
	padding-top: 20px;
}

.feedbackMessage {
	position: relative;
	font-size: 36;
	color: #00576e;
//	background: white;
}
.endOfGameMessage {
	position: relative;
	font-size: 60;
	background: rgb(66, 184, 221); /* this is a light blue */
	color: #00576e;
	top: 40px;
}

.startButton {
	position: relative;
	font-size: 32;
	background: rgb(66, 184, 221); /* this is a light blue */
	top: 40px;
	width: 220px;
	color: #00576e;
}
.initalStartButton {
	font-size: 32;
	background: rgb(66, 184, 221); /* this is a light blue */
	width: 220px;
	color: #00576e;
}
.initialStartButtonArea{
	position: relative;
	width: 75%;
	text-align: center;	
//	background: gray;
	padding-top: 250px;
}

.myTestClass1 {
	background: black;
	color: white;
}

.myTestClass2 {
	background: brown;
	color: yellow;
}


.midSpaceBar1 {
	height: 10px;
//	background: gray;
}

.levelHeader {
	position: relative;
	top: 10px;
	left: 15px;
	color: #339bb7;
	font-size: 12;
	text-align: left;
}


.letterDropTarget{
	background: lightgray;
}
.wordImageContainer{
	position: relative;
	height: 298px;
	width: 70%;
	top: 0px;
//	background: yellow;
}
.wordImage {
	position: absolute;  
    top: 0;  
    bottom: 0;  
    left: 0;  
    right: 0;  
    margin: auto;  
	max-height: 200px;
	max-width: 200px;
}

.wordImageBackground {
	position: relative;
	background-image: url(../img/picture-frame.png);
	height: 256px;
	width: 256px;
	margin: 0 auto;
}

.trampolineContainer{
	position: absolute;
	left: 60px;
	bottom: 20px;
	width: 160px;
	height: 600px;
}
.score {
	position: absolute;
	top: 30px;
	left: 36px;
	// had to reduce padding size from original height (sun image height);
	height: 62px; 
	width: 88px;
//	height: 88px;
//	width: 88px;
	padding-top: 26px;
	background-image: url(../img/sunSmall.png);	
//	background-position: 169px 169px;
	text-align: center;	
	font-size: 30px;
	color: #00576e;
}
.duck {
	position: absolute;
	bottom: 118px;
	left: 32px;
	z-index: 4;
}
.trampoline {
	position: absolute;
	width: 133px;
	height: 74px;
	left: 13px; bottom : 100px;
	z-index: 3;
	background-image: url(../img/trampoline1.png);
	bottom: 100px;
}

.spring {
	
	position: absolute;
	display: block;
	bottom: 30px;
	left: 29px;
	z-index: 2;
	width: 102px;
	height: 94px;
	background-image: url(../img/spring1.png);
	}

.springBase {
	position: absolute;
	display: block;
	bottom: 0px;
	left: 9px;

	width: 142px;
	height:53px;
	background-image: url(../img/spring-base.png);
	}